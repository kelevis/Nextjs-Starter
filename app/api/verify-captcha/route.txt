// pages/api/route.ts
import type { NextApiRequest, NextApiResponse } from 'next';
// import fetch from 'node-fetch';

const route = async (token: string) => {
    const response = await fetch('https://www.google.com/recaptcha/api/siteverify', {
        method: 'POST',
        body: new URLSearchParams({
            secret: process.env.RECAPTCHA_SECRET_KEY as string,
            response: token,
        }),
    });

    return response.json();
};

export default async (req: NextApiRequest, res: NextApiResponse) => {
    if (req.method !== 'POST') {
        return res.status(405).json({ success: false, message: 'Method not allowed' });
    }

    const { token } = req.body;

    if (!token) {
        return res.status(400).json({ success: false, message: 'Token is required' });
    }

    try {
        const verificationResponse = await route(token);

        if (verificationResponse.success) {
            return res.status(200).json({ success: true });
        } else {
            return res.status(400).json({ success: false, error: verificationResponse['error-codes'] });
        }
    } catch (error) {
        return res.status(500).json({ success: false, message: 'Internal server error' });
    }
};
